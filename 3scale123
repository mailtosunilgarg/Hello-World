{
    "swagger": "2.0",
    "info": {
        "title": "Car Locations",
        "version": "v1"
    },
    "host": "stage.abgapiservices.com",
    "basePath": "/cars/locations",
    "schemes": [
        "https"
    ],
    "paths": {
        "/v1": {
            "get": {
                "parameters": [
                    {
                        "name": "brand",
                        "description": "The Avis, Budget, or Payless brand name.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "default": "Avis,Budget,Payless",
                        "pattern": "^(Avis|Budget|Payless)(,(Avis|Budget|Payless))*$"
                    },
                    {
                        "name": "country_code",
                        "description": "2-letter ISO 3166 country code of the product location.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2
                    },
                    {
                        "name": "keyword",
                        "description": "The location keyword you would like to search.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transaction_id",
                        "description": "The transaction identifier used to identify and troubleshoot a given request.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lat",
                        "description": "Latitude of the product location you would like to search.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "long",
                        "description": "Longitude of the product location you would like to search.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "description": "Your client identifier.",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 32
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "title": "200 Success Response",
                            "description": "The following demonstrates an example of successful request for this endpoint.",
                            "required": [
                                "status",
                                "transaction",
                                "locations"
                            ],
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Request Status",
                                    "description": "A container for the success/error details.",
                                    "required": [
                                        "success",
                                        "request_time"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "title": "Success Details",
                                            "description": "The HTTP success code, message and details",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "code",
                                                    "message",
                                                    "details"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "description": "The HTTP status code value",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "The HTTP status code message",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "description": "Description of the success status",
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        },
                                        "request_time": {
                                            "format": "date-time",
                                            "description": "The time stamp of the request",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                },
                                "transaction": {
                                    "title": "Request Transaction",
                                    "description": "In the instance a request has failed, transaction identifiers allow you to quickly identify the failed request. The following request transaction identifier may be used by your application to identify a request. We recommend that you use this identifier in every request.",
                                    "type": "object",
                                    "properties": {
                                        "transaction_id": {
                                            "description": "The transaction identifier used to identify and troubleshoot a given request.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                },
                                "locations": {
                                    "title": "Location Results",
                                    "description": "The list of available locations within a certain radius of the specified latitude/longitude.",
                                    "type": "array",
                                    "items": {
                                        "required": [
                                            "brand",
                                            "address"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "brand": {
                                                "description": "ABG brand name",
                                                "enum": [
                                                    "Avis",
                                                    "Budget",
                                                    "Payless"
                                                ],
                                                "type": "string",
                                                "example": "Avis"
                                            },
                                            "code": {
                                                "description": "3-5 character alphanumeric location or airport code.",
                                                "type": "string",
                                                "example": "BOS"
                                            },
                                            "name": {
                                                "description": "Name of the product location.",
                                                "type": "string",
                                                "example": "Boston Logan Intl Airport"
                                            },
                                            "telephone": {
                                                "description": "Phone number of the product location.",
                                                "type": "string",
                                                "example": "617-568-6600"
                                            },
                                            "hours": {
                                                "description": "Operating hours of the product location.",
                                                "type": "string",
                                                "example": "Sun-Sat Open 24 hours"
                                            },
                                            "airport_location": {
                                                "description": "Indicates whether the product location is an airport.",
                                                "type": "boolean"
                                            },
                                            "distance": {
                                                "description": "Distance from the specified location for the distance unit.",
                                                "type": "number"
                                            },
                                            "address": {
                                                "title": "Address",
                                                "description": "Address information of the rental brand product location, including geographic coordinates (if applicable).",
                                                "type": "object",
                                                "properties": {
                                                    "address_line_1": {
                                                        "description": "Address (line 1) of the user.",
                                                        "type": "string",
                                                        "example": "1534 Meadow Drive"
                                                    },
                                                    "address_line_2": {
                                                        "description": "Address (line 2) of the user.",
                                                        "type": "string",
                                                        "example": "2nd Floor"
                                                    },
                                                    "address_line_3": {
                                                        "description": "Address (line 3) of the user.",
                                                        "type": "string",
                                                        "example": "Suite 235"
                                                    },
                                                    "city": {
                                                        "description": "City name of the user.",
                                                        "type": "string",
                                                        "example": "Boston"
                                                    },
                                                    "state_name": {
                                                        "description": "State name of the user (if applicable).",
                                                        "type": "string",
                                                        "example": "Massachusetts"
                                                    },
                                                    "postal_code": {
                                                        "description": "Numeric or alphanumeric postal code of the user, which varies by country (02128 or CT3).",
                                                        "type": "string",
                                                        "example": "W16PR"
                                                    },
                                                    "country_code": {
                                                        "description": "2-letter ISO 3166 country code of the user.",
                                                        "type": "string",
                                                        "example": "US"
                                                    },
                                                    "lat": {
                                                        "description": "Geographic latitude of the location.",
                                                        "type": "string",
                                                        "example": "40.690022"
                                                    },
                                                    "long": {
                                                        "description": "Geographic longitude of the location.",
                                                        "type": "string",
                                                        "example": "-74.187506"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        },
                                        "additionalProperties": true
                                    }
                                }
                            },
                            "additionalProperties": true,
                            "example": {
                                "status": {
                                    "request_time": "2018-10-25T12:01:54Z",
                                    "success": [
                                        {
                                            "code": "200",
                                            "message": "Success",
                                            "details": "The locations were retrieved successfully."
                                        }
                                    ]
                                },
                                "transaction": {
                                    "transaction_id": "12313"
                                },
                                "locations": [
                                    {
                                        "airport_location": true,
                                        "address": {
                                            "state_name": "New Jersey",
                                            "postal_code": "07114",
                                            "city": "Newark",
                                            "lat": "40.690022",
                                            "address_line_1": "28 Newark Airport",
                                            "address_line_2": "Na",
                                            "long": "-74.187506",
                                            "address_line_3": "Na",
                                            "country_code": "US"
                                        },
                                        "code": "EWR",
                                        "name": "Newark Liberty Intl Airport",
                                        "telephone": "(1) 973-961-4300",
                                        "hours": "Sun-Sat 0:00 AM - 12:00 AM and 0:00 AM - 12:00 AM",
                                        "brand": "Avis"
                                    },
                                    {
                                        "code": "EWR",
                                        "distance_unit": "Miles",
                                        "brand": "Budget",
                                        "name": "Newark Liberty Intl Airport",
                                        "telephone": "(1) 973-961-4300",
                                        "hours": "Sun-Sat 0:00 AM - 12:00 AM and 0:00 AM - 12:00 AM",
                                        "airport_location": true,
                                        "address": {
                                            "lat": "40.690022",
                                            "address_line_2": "Na",
                                            "country_code": "US",
                                            "address_line_3": "Na",
                                            "city": "Newark",
                                            "long": "-74.187506",
                                            "address_line_1": "28 Newark Airport",
                                            "state_name": "New Jersey",
                                            "postal_code": "07114"
                                        }
                                    }
                                ]
                            }
                        },
                        "x-amf-mediaType": "application/json"
                    },
                    "400": {
                        "description": "400 Bad Request is returned when the request could not be understood by the server. 400 includes missing required values, invalid data types, minimum/maximum values, ranges and format.",
                        "schema": {
                            "title": "400 Bad Request",
                            "required": [
                                "status"
                            ],
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Error Status",
                                    "description": "A container for the error details",
                                    "required": [
                                        "errors",
                                        "request_errors",
                                        "request_time"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "title": "Errors Details",
                                            "description": "The following describes the elements that can appear in the response body of an error.",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "code",
                                                    "message",
                                                    "reason",
                                                    "details"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "description": "The HTTP status code value",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "The HTTP status code message",
                                                        "type": "string"
                                                    },
                                                    "reason": {
                                                        "description": "The reason the request has failed",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "description": "Description of the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        },
                                        "request_errors": {
                                            "description": "The number of errors that occurred",
                                            "type": "integer"
                                        },
                                        "request_time": {
                                            "format": "date-time",
                                            "description": "The time stamp of the request",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            },
                            "additionalProperties": true,
                            "example": {
                                "status": {
                                    "request_time": "2019-01-04T15:15:30Z",
                                    "request_errors": 1,
                                    "errors": [
                                        {
                                            "code": "400",
                                            "message": "Bad Request",
                                            "reason": "invalid_request",
                                            "details": "Required query parameter country_code not specified"
                                        }
                                    ]
                                }
                            }
                        },
                        "x-amf-mediaType": "application/json"
                    },
                    "404": {
                        "description": "404 Not Found is returned when server cannot find the matching request URI (either due to no results, or because of a non-existent endpoint or resource). Server may also respond with this status code when there is 401 or 403, which the service wants to mask for security reasons.",
                        "schema": {
                            "title": "404 Not Found",
                            "required": [
                                "status"
                            ],
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Error Status",
                                    "description": "A container for the error details",
                                    "required": [
                                        "errors",
                                        "request_errors",
                                        "request_time"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "title": "Errors Details",
                                            "description": "The following describes the elements that can appear in the response body of an error.",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "code",
                                                    "message",
                                                    "reason",
                                                    "details"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "description": "The HTTP status code value",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "The HTTP status code message",
                                                        "type": "string"
                                                    },
                                                    "reason": {
                                                        "description": "The reason the request has failed",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "description": "Description of the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        },
                                        "request_errors": {
                                            "description": "The number of errors that occurred",
                                            "type": "integer"
                                        },
                                        "request_time": {
                                            "format": "date-time",
                                            "description": "The time stamp of the request",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            },
                            "additionalProperties": true,
                            "example": {
                                "status": {
                                    "request_time": "2019-01-04T15:15:30Z",
                                    "request_errors": 1,
                                    "errors": [
                                        {
                                            "code": "404",
                                            "message": "Resource Not Found",
                                            "reason": "resource_failure",
                                            "details": "Server cannot find the requested resource. This may be due to incorrect URI or a resource that is not available."
                                        },
                                        {
                                            "code": "609",
                                            "message": "Not Found",
                                            "reason": "Location details are not found for the given search criteria.",
                                            "details": "Avis failed to fulfill the request. Proximity search details are not available for the given input."
                                        }
                                    ]
                                }
                            }
                        },
                        "x-amf-mediaType": "application/json"
                    },
                    "405": {
                        "description": "A request method is not supported for the requested resource; for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.",
                        "schema": {
                            "title": "405 Method Not Allowed",
                            "required": [
                                "status"
                            ],
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Error Status",
                                    "description": "A container for the error details",
                                    "required": [
                                        "errors",
                                        "request_errors",
                                        "request_time"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "title": "Errors Details",
                                            "description": "The following describes the elements that can appear in the response body of an error.",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "code",
                                                    "message",
                                                    "reason",
                                                    "details"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "description": "The HTTP status code value",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "The HTTP status code message",
                                                        "type": "string"
                                                    },
                                                    "reason": {
                                                        "description": "The reason the request has failed",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "description": "Description of the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        },
                                        "request_errors": {
                                            "description": "The number of errors that occurred",
                                            "type": "integer"
                                        },
                                        "request_time": {
                                            "format": "date-time",
                                            "description": "The time stamp of the request",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            },
                            "additionalProperties": true,
                            "example": {
                                "status": {
                                    "request_time": "2019-01-04T15:15:30Z",
                                    "request_errors": 1,
                                    "errors": [
                                        {
                                            "code": "405",
                                            "message": "Method Not Allowed",
                                            "reason": "Method Not Allowed",
                                            "details": "org.mule.module.apikit.exception.MethodNotAllowedException"
                                        }
                                    ]
                                }
                            }
                        },
                        "x-amf-mediaType": "application/json"
                    },
                    "406": {
                        "description": "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                        "schema": {
                            "title": "406 Not Accecptable",
                            "required": [
                                "status"
                            ],
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Error Status",
                                    "description": "A container for the error details",
                                    "required": [
                                        "errors",
                                        "request_errors",
                                        "request_time"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "title": "Errors Details",
                                            "description": "The following describes the elements that can appear in the response body of an error.",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "code",
                                                    "message",
                                                    "reason",
                                                    "details"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "description": "The HTTP status code value",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "The HTTP status code message",
                                                        "type": "string"
                                                    },
                                                    "reason": {
                                                        "description": "The reason the request has failed",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "description": "Description of the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        },
                                        "request_errors": {
                                            "description": "The number of errors that occurred",
                                            "type": "integer"
                                        },
                                        "request_time": {
                                            "format": "date-time",
                                            "description": "The time stamp of the request",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            },
                            "additionalProperties": true,
                            "example": {
                                "status": {
                                    "request_time": "2019-01-04T15:15:30Z",
                                    "request_errors": 1,
                                    "errors": [
                                        {
                                            "code": "406",
                                            "message": "Not Accecptable",
                                            "reason": "Not Accecptable",
                                            "details": "org.mule.module.apikit.exception.NotAcceptableException"
                                        }
                                    ]
                                }
                            }
                        },
                        "x-amf-mediaType": "application/json"
                    },
                    "415": {
                        "description": "The request entity has a media type which the server or resource does not support. For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.",
                        "schema": {
                            "title": "415 Unsupported Media Type",
                            "required": [
                                "status"
                            ],
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Error Status",
                                    "description": "A container for the error details",
                                    "required": [
                                        "errors",
                                        "request_errors",
                                        "request_time"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "title": "Errors Details",
                                            "description": "The following describes the elements that can appear in the response body of an error.",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "code",
                                                    "message",
                                                    "reason",
                                                    "details"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "description": "The HTTP status code value",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "The HTTP status code message",
                                                        "type": "string"
                                                    },
                                                    "reason": {
                                                        "description": "The reason the request has failed",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "description": "Description of the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        },
                                        "request_errors": {
                                            "description": "The number of errors that occurred",
                                            "type": "integer"
                                        },
                                        "request_time": {
                                            "format": "date-time",
                                            "description": "The time stamp of the request",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            },
                            "additionalProperties": true,
                            "example": {
                                "status": {
                                    "request_time": "2019-01-04T15:15:30Z",
                                    "request_errors": 1,
                                    "errors": [
                                        {
                                            "code": "415",
                                            "message": "Unsupported Media Type",
                                            "reason": "Unsupported Media Type",
                                            "details": "org.mule.module.apikit.exception.UnsupportedMediaTypeException"
                                        }
                                    ]
                                }
                            }
                        },
                        "x-amf-mediaType": "application/json"
                    },
                    "500": {
                        "description": "500 Internal Server Error is returned when a system or application error has occurred. It generally indicates that something unexpected has gone wrong on the server. This is used for a standard server side exception for a persistent error on the server side.",
                        "schema": {
                            "title": "500 Internal Server Error",
                            "required": [
                                "status"
                            ],
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Error Status",
                                    "description": "A container for the error details",
                                    "required": [
                                        "errors",
                                        "request_errors",
                                        "request_time"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "title": "Errors Details",
                                            "description": "The following describes the elements that can appear in the response body of an error.",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "code",
                                                    "message",
                                                    "reason",
                                                    "details"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "description": "The HTTP status code value",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "The HTTP status code message",
                                                        "type": "string"
                                                    },
                                                    "reason": {
                                                        "description": "The reason the request has failed",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "description": "Description of the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        },
                                        "request_errors": {
                                            "description": "The number of errors that occurred",
                                            "type": "integer"
                                        },
                                        "request_time": {
                                            "format": "date-time",
                                            "description": "The time stamp of the request",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            },
                            "additionalProperties": true,
                            "example": {
                                "status": {
                                    "request_time": "2019-01-04T15:15:30Z",
                                    "request_errors": 1,
                                    "errors": [
                                        {
                                            "code": "610",
                                            "message": "Service exception",
                                            "reason": "System exception from e-com backend.",
                                            "details": "Avis failed to fulfill the request. System Exception occurred during location search.Please check the log for details."
                                        }
                                    ]
                                }
                            }
                        },
                        "x-amf-mediaType": "application/json"
                    }
                },
                "security": [
                    {
                        "ABG-Access-Token": [
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "test123",
                    "description": "",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }
            ],
            "x-amf-displayName": "Car Locations"
        }
    },
    "definitions": {
        "ApiResponse": {
            "$ref": "#/definitions/ApiResponse1"
        },
        "Category": {
            "$ref": "#/definitions/Category1"
        },
        "dataTypeWithExample": {
            "$ref": "#/definitions/dataTypeWithExample1"
        },
        "Order": {
            "$ref": "#/definitions/Order1"
        },
        "Pet": {
            "$ref": "#/definitions/Pet1"
        },
        "Tag": {
            "$ref": "#/definitions/Tag1"
        },
        "User": {
            "$ref": "#/definitions/User1"
        },
        "Widget": {
            "$ref": "#/definitions/Widget1"
        },
        "ApiResponse1": {
            "type": "object",
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Category1": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Category"
            }
        },
        "dataTypeWithExample1": {
            "title": "Root Type for dataTypeWithExample",
            "description": "dataTypeWithExample",
            "type": "object",
            "properties": {
                "dataTypeWithExample": {
                    "type": "string"
                }
            },
            "example": {
                "dataTypeWithExample": "dataTypeWithExample"
            }
        },
        "Order1": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "petId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "shipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ],
                    "type": "string"
                },
                "complete": {
                    "default": false,
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "Order"
            }
        },
        "Pet1": {
            "required": [
                "name",
                "photoUrls"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "category": {
                    "$ref": "#/definitions/Category1"
                },
                "name": {
                    "type": "string",
                    "example": "doggie"
                },
                "photoUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "xml": {
                        "name": "photoUrl",
                        "wrapped": true
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag1"
                    },
                    "xml": {
                        "name": "tag",
                        "wrapped": true
                    }
                },
                "status": {
                    "description": "pet status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ],
                    "type": "string"
                }
            },
            "xml": {
                "name": "Pet"
            }
        },
        "Tag1": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Tag"
            }
        },
        "User1": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "format": "int32",
                    "description": "User Status",
                    "type": "integer"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Widget1": {
            "title": "Root Type for Widget",
            "description": "A very simple, generic data type.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the widget.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the widget.",
                    "type": "string"
                }
            },
            "example": "{\n    \"name\": \"My Widget\",\n    \"description\": \"Just a little widget for your review.\"\n}"
        }
    },
    "securityDefinitions": {
        "ABG-Access-Token": {
            "type": "apiKey",
            "description": "Generate an ABG API Access Token",
            "name": "Authorization",
            "in": "header"
        }
    }
}